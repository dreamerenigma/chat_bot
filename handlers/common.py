from aiogram import types, Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from ban_words import ban_words
from database.bots_database import get_bots_list_from_db
from filters.filters import ProfanityFilter, handle_profanity
from handlers.messages import welcome_text
from keyboards.reply_keyboard import select_bots_keyboard
from states.bot_states import BotForm, BotState, GameCreation

router = Router()

profanity_filter = ProfanityFilter(ban_words)

async def start_command(message: types.Message):
    await message.answer(welcome_text, parse_mode='HTML', disable_web_page_preview=True)

async def help_command(message: types.Message):
    await message.answer(welcome_text, parse_mode='HTML', disable_web_page_preview=True)

def register_handlers_common(dp):
    router.message.register(start_command, Command(commands=["start"]))
    router.message.register(help_command, Command(commands=["help"]))
    router.message(profanity_filter)(handle_profanity)
    dp.include_router(router)

@router.message(Command(commands=["id"]))
async def get_chat_id(message: types.Message):
    chat_id = message.chat.id
    await message.answer(f"ID –≥—Ä—É–ø–ø—ã: {chat_id}")

@router.message(Command(commands=["token"]))
async def generate_token_command(message: types.Message, state: FSMContext):
    bots_list = await get_bots_list_from_db()
    if bots_list:
        markup = select_bots_keyboard(bots_list)
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ —Ç–æ–∫–µ–Ω:", reply_markup=markup)

        await state.set_state(BotState.waiting_for_token_retrieval)
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–∫–µ–Ω–∞.")

@router.message(Command(commands=["revoke"]))
async def generate_revoke_token_command(message: types.Message, state: FSMContext):
    bots_list = await get_bots_list_from_db()
    if bots_list:
        markup = select_bots_keyboard(bots_list)
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞. –í–Ω–∏–º–∞–Ω–∏–µ: –≤–∞—à —Å—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.", reply_markup=markup)
        await state.set_state(BotState.waiting_for_token_revocation)
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞.")


@router.message(Command(commands=["clear"]))
async def clear_command(message: types.Message):
    await message.answer("–ß–∞—Ç –æ—á–∏—â–µ–Ω!")


@router.message(Command(commands=["cancel"]))
async def cancel_command(message: types.Message):
    await message.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–º–µ–Ω—ã. –Ø –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–ª. üò¥...")


@router.message(Command(commands=["newbot"]))
async def newbot_command(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("–•–æ—Ä–æ—à–æ, –Ω–æ–≤—ã–π –±–æ—Ç. –ö–∞–∫ –º—ã –µ–≥–æ –Ω–∞–∑–æ–≤–µ–º? –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–º—è –¥–ª—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞.")
    await state.set_state(BotForm.waiting_for_bot_name)


@router.message(Command(commands=["editgame"]))
async def edit_game_command_handler(message: types.Message, state: FSMContext):
    await message.answer("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–≥—Ä—É –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, t.me/bot?game=game).")
    await state.set_state(GameCreation.waiting_for_game_edit)


@router.message(Command(commands=["deletegame"]))
async def delete_game_command(message: types.Message, state: FSMContext):
    await message.answer("–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∏–≥—Ä—É, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∏–≥—Ä—É –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, t.me/bot?game=game).")
    await state.set_state(GameCreation.waiting_for_game_link)


@router.message(Command(commands=["deletebot"]))
async def delete_bot_command(message: types.Message, state: FSMContext):
    bots_list = await get_bots_list_from_db()
    if bots_list:
        markup = select_bots_keyboard(bots_list)
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=markup)
        await state.set_state(BotState.waiting_for_delete_bot)
    else:
        await message.answer("–£ –≤–∞—Å —Å–µ–π—á–∞—Å –Ω–µ—Ç –±–æ—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –±–æ—Ç–∞.")


@router.message(Command(commands=["listgames"]))
async def delete_game(message: types.Message, state: FSMContext):
    bots_list = await get_bots_list_from_db()
    if bots_list:
        markup = select_bots_keyboard(bots_list)
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –µ–≥–æ –∏–≥—Ä.", reply_markup=markup)
        await state.set_state(GameCreation.waiting_list_games)
    else:
        await message.answer("–£ –≤–∞—Å —Å–µ–π—á–∞—Å –Ω–µ—Ç –∏–≥—Ä. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /newgame –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π –∏–≥—Ä—ã.")


@router.message(Command(commands=["skip"]))
async def skip_command(message: types.Message, state: FSMContext):
    await state.set_state(GameCreation.waiting_for_new_photo)
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /skip, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∫–∞–∫ –µ—Å—Ç—å.")


@router.message(Command(commands=["skip"]), GameCreation.waiting_for_new_photo)
async def skip_photo_command(message: types.Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π GIF. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /skip, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å GIF –∫–∞–∫ –µ—Å—Ç—å, –∏–ª–∏ /empty, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π GIF.")
    await state.clear()